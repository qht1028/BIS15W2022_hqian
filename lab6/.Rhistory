install.packages("skimr")
install.packages("palmerpenguins")
library("tidyverse")
library("janitor")
#install.packages("skimr")
library("skimr")
?msleep
names(msleep)
#remotes::install_github("allisonhorst/palmerpenguins")
msleep24 <- msleep %>%
mutate(sleep_total_24=sleep_total/24) %>%
select(name, vore, sleep_total_24) %>%
filter(!is.na(vore)) %>%
filter(sleep_total_24<0.3) %>%
arrange(desc(sleep_total_24))
msleep24 <- msleep %>%
mutate(sleep_total_24=sleep_total/24) %>%
select(name, vore, sleep_total_24) %>%
filter(!is.na(vore)) %>%
filter(sleep_total_24<0.3) %>%
arrange(desc(sleep_total_24))
summary(msleep24)
msleep24 <- msleep %>%
mutate(sleep_total_24=sleep_total/24) %>%
select(name, vore, sleep_total_24) %>%
filter(!is.na(vore)) %>%
filter(sleep_total_24<0.3) %>%
arrange(desc(sleep_total_24))
skim(msleep24)
hist(msleep24$sleep_total_24)
msleep24 %>%
tabyl(vore) %>%
adorn_pct_formatting(digits=1)
msleep%>%
select(order, vore)
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
tably()
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
tabyl()
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
tabyl(vore)
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
arrange(order)
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
summary()
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
skim()
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
arrange(order)
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
arrange(order)$>$
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
arrange(order)%>%
tabyl(vore)
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
arrange(order)
herb<-msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
filter(vore=="herbi")
herb<-msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
filter(vore=="herbi")%>%
print()
herb<-msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
filter(vore=="herbi")%>%
unique(order)
herb<-msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
filter(vore=="herbi")%>%
unique()
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
unique()
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
unique()%>%
arrange(order)
head(msleep)
large <-
msleep %>%
select(name, genus, bodywt, sleep_total) %>%
filter(bodywt > 200) %>%
arrange(desc(bodywt))
large
mean(large$sleep_total)
msleep %>%
filter(bodywt > 200) %>% #large mammals
summarize(mean_sleep_lg = mean(sleep_total))
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
unique()%>%
tabyl()
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
unique()%>%
tabyl(order)
msleep %>%
filter(bodywt > 200) %>%
summarize(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
total = n())
msleep%>%
filter(order=="Primates")
msleep%>%
filter(order=="Primates")%>%
summarize(mean_bodywt = mean(bodywt),
min_bodywt=min(bodywt),
max_bodywt=max(bodywt),
total=n())
msleep %>%
filter(bodywt > 100) %>%
summarise(n_genera=n_distinct(genus))
msleep%>%
summarise(n_gene=n_distinct(genus))
msleep%>%
summarise(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
total = n())
msleep%>%
summarise(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
total = n())
msleep%>%
summarise(mean_sleep_lg = mean(sleep_total),
min_sleep_lg = min(sleep_total),
max_sleep_lg = max(sleep_total),
total = n())
msleep %>%
group_by(vore) %>% #we are grouping by feeding ecology
summarize(min_bodywt = min(bodywt),
max_bodywt = max(bodywt),
mean_bodywt = mean(bodywt),
total=n())
msleep%>%
group_by(order)%>%
summarize(mean_bodywt = mean(brainwt),
total=n())
msleep%>%
filter(!is.na(brainwt))%>%
group_by(order)%>%
summarize(mean_bodywt = mean(brainwt),
total=n())
msleep%>%
group_by(order)%>%
summarize(mean_bodywt = mean(brainwt),
total=n())
msleep%>%
filter(!is.na(brainwt))%>%
group_by(order)%>%
summarize(mean_bodywt = mean(brainwt),
total=n())
msleep%>%
group_by(order)%>%
summarize(mean_bodywt = mean(brainwt),
na.rm=TRUE
total=n())
msleep%>%
group_by(order)%>%
summarize(mean_bodywt = mean(brainwt, na.rm = TRUE),
total=n())
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
library("tidyverse")
library("janitor")
library("skimr")
library("palmerpenguins")
glimpse(penguins)
penguins %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g),
n=n())
penguins %>%
group_by(island) %>%
summarize(number_NAs=sum(is.na(body_mass_g)))
penguins %>%
filter(!is.na(body_mass_g)) %>%
group_by(island) %>%
summarize(mean_body_mass_g=mean(body_mass_g),
sd_body_mass_g=sd(body_mass_g),
n=n())
names(penguins)
penguins %>%
group_by(species, island) %>%
summarize(n=n(), .groups= 'keep')#the .groups argument here just prevents a warning message
penguins %>%
count(island, sort = T) #sort=T sorts the column in descending order
penguins %>%
group_by(island) %>%
summarize(n=n())
penguins %>%
count(island, species, sort = T)
penguins %>%
group_by(island) %>%
summarize(n=n())
penguins %>%
count(island, species, sort = T)
penguins %>%
tabyl(island, species)
penguins%>%
filter(species="Adelie")
penguins%>%
filter(species=="Adelie")
penguins%>%
filter(species=="Adelie")%>%
summarize(mean_bill_length=mean(bill_length_mm),
mean_bill_depth=mean(bill_depth_mm),
mean_flipper_length=mean(flipper_length_mm),
mean_body_mass=mean(body_mass_g),
n=n())
penguins%>%
filter(species=="Adelie")%>%
filter(!is.na())
penguins%>%
filter(species=="Adelie", na.rm=FALSE)%>%
summarize(mean_bill_length=mean(bill_length_mm),
mean_bill_depth=mean(bill_depth_mm),
mean_flipper_length=mean(flipper_length_mm),
mean_body_mass=mean(body_mass_g),
n=n())
penguins%>%
filter(species=="Adelie", na.rm=TRUE)%>%
summarize(mean_bill_length=mean(bill_length_mm),
mean_bill_depth=mean(bill_depth_mm),
mean_flipper_length=mean(flipper_length_mm),
mean_body_mass=mean(body_mass_g),
n=n())
penguins%>%
filter(species=="Adelie")%>%
summarize(mean_bill_length=mean(bill_length_mm, na.rm = TRUE),
mean_bill_depth=mean(bill_depth_mm, na.rm = TRUE),
mean_flipper_length=mean(flipper_length_mm, na.rm = TRUE),
mean_body_mass=mean(body_mass_g, na.rm = TRUE),
n=n())
penguins%>%
select(species, bill_length_mm)
penguins%>%
select(species, bill_length_mm)%>%
filter(!is.na(bill_length_mm))
penguins%>%
select(species, bill_length_mm)%>%
filter(!is.na(bill_length_mm))%>%
group_by(species)%>%
summarize(mean_bill_length=mean(bill_length_mm),
n=n())
penguins%>%
filter(is.na(sex))
penguins%>%
filter(is.na(sex))%>%
count(island)
penguins%>%
filter(is.na(sex))
penguins%>%
filter(is.na(sex))%>%
count(island)
penguins %>%
summarize(distinct_species = n_distinct(species),
distinct_island = n_distinct(island),
distinct_sex = n_distinct(sex))
names(penguins)
penguins %>%
summarize(across(c(species, island, sex), n_distinct))
penguins %>%
summarize(across(contains("mm"), mean, na.rm=T))
table1 <- penguins %>%
group_by(sex) %>%
summarize(across(contains("mm"), mean, na.rm=T))
table1 <- penguins %>%
group_by(sex) %>%
summarize(across(contains("mm"), mean, na.rm=T))
View(table1)
View(table1)
table1 <- penguins %>%
group_by(sex) %>%
summarize(across(contains("mm"), mean, na.rm=T))
penguins %>%
summarise_all(n_distinct)
penguins %>%
summarise(across(!c(species, island, sex),
n_distinct))
penguins %>%
summarise(across(starts_with("bill"), n_distinct))
penguins%>%
group_by(species)%>%
summarize(across(ends_with("mm"), mean, sd))
penguins%>%
group_by(species)%>%
summarize(across(ends_with("mm"), mean))
penguins%>%
group_by(species)%>%
summarize(across(ends_with("mm"), mean, na.rm=TRUE))
penguins%>%
group_by(species)%>%
summarize(across(ends_with("mm"), mean, na.rm=TRUE))
penguins%>%
group_by(species)%>%
summarize(across(ends_with("mm"), sd, na.rm=TRUE))
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
group_by(order)%>%
summarise(n=n())
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
group_by(order)%>%
summarise(vore_type=n_distinct(vore))
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
unique()
msleep%>%
select(order, vore)%>%
filter(!is.na(vore))%>%
unique()%>%
count(order)
