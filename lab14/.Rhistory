coord_flip()+
labs(title = "Superhero Weight",
x="Alignment",
y="Weight")+
theme(plot.title=element_text(hjust=.5))
superhero_info %>%
filter(!is.na(weight))%>%
ggplot(mapping = aes(x=alignment, y=weight, fill=alignment))+
geom_boxplot(alpha = .2)+
geom_violin(alpha = .6)+
coord_flip()+
labs(title = "Superhero Weight",
x="Alignment",
y="Weight")+
theme(plot.title=element_text(hjust=.5))
superhero_info <- superhero_info %>%
clean_names()
skim(superhero_info)
head(superhero_info, n=5)
superhero_info%>%
filter(!is.na(height))%>%
ggplot(mapping = aes(x=gender, y=height, fill=alignment))+
geom_boxplot(alpha = .2)+
geom_violin(alpha = .6)+
coord_flip()+
labs(title = "Superhero Height",
x="Gender",
y="Height")+
theme(plot.title=element_text(hjust=.5))
superhero_info%>%
filter(!is.na(height))%>%
ggplot(mapping = aes(x=gender, y=height, fill=gender))+
geom_boxplot(alpha = .2)+
geom_violin(alpha = .6)+
coord_flip()+
labs(title = "Superhero Height",
x="Gender",
y="Height")+
theme(plot.title=element_text(hjust=.5))
library(tidyverse)
library(janitor)
library("palmerpenguins")
options(scipen=999) #cancels the use of scientific notation for the session
library(tidyverse)
library(janitor)
library("palmerpenguins")
options(scipen=999) #cancels the use of scientific notation for the session
penguins <- penguins
heartrate <- readr::read_csv("data/heartrate.csv")
heartrate <- heartrate %>%
add_column(no_drug = c(71, 79, 66, 62, 73, 81) )
homerange <- read_csv("data/modified_Tamburelloetal_HomeRangeDatabase.csv")
heartrate_long <- heartrate %>%
pivot_longer(-patient, #patient does not pivot
names_to = "drug",
values_to = "heartrate"
)
heartrate_long
heartrate_long %>%
ggplot(aes(patient, drug, fill= heartrate)) +
geom_tile() +
scale_fill_gradient(low="yellow", high="red")
heartrate_diff <- heartrate%>%
mutate(across(c(a,b,c,d), ~ . - no_drug)) %>%
select(-no_drug) %>%
pivot_longer(-patient, #patient does not pivot
names_to = "drug",
values_to = "heartrate"
)
heartrate_diff
heartrate_diff %>%
ggplot(aes(patient, drug, fill= heartrate)) +
geom_tile()+
scale_fill_gradient2(low="green", mid = "white", high="red")
# scale_fill_graient2 lets you set a color direction for zero (mid), positive (high), and negative (low)
heartrate_diff %>%
ggplot(aes(patient, drug, fill= heartrate)) +
geom_tile()+
scale_fill_gradient2(low="green", mid = "white", high="red")
# scale_fill_graient2 lets you set a color direction for zero (mid), positive (high), and negative (low)
beachbugs_long <- beachbugs_long %>%
clean_names()
skim(beachbugs_long)
beachbugs_long%>%
ggplot(aes(site, year, fill=buglevels))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")
beachbugs_long%>%
ggplot(aes(site, year, fill=buglevels))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "Bug level",
x="Site",
y="Year")+
theme(plot.title=element_text(hjust=.5))
#makes a new column of the highest buglevel observed at each site
beachbugs_w_max <- beachbugs_long %>%
group_by(site) %>%
mutate(max_buglevel = max(buglevels, na.rm=T)) %>%
arrange(site)
beachbugs_w_max
#makes a new table where the buglevels are normalized to the max_buglevel
beachbugs_normalized <- beachbugs_w_max %>%
group_by(site) %>%
mutate(norm_buglevel = buglevels/max_buglevel) %>%
arrange(site,year) %>%
select(site, year, norm_buglevel)   # you dont have to select(), but I think its a clearer looking table
beachbugs_normalized
beachbugs_normalized%>%
ggplot(aes(site, year, fill=norm_buglevel))+
geom_tile()+
scale_fill_gradient(low="yellow", high="red")+
theme(axis.text.x = element_text(angle = 60, hjust = 1))+
labs(title = "Bug level",
x="Site",
y="Year")+
theme(plot.title=element_text(hjust=.5))
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "no hair")%>%
pull(name)
questions_list <- list(evil_vec, red_vec, male_vec, bald_vec)
ggVennDiagram(questions_list , category.names = c("Evil", "Red eye", "Male", "Bald"))
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "Male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "No hair")%>%
pull(name)
questions_list <- list(evil_vec, red_vec, male_vec, bald_vec)
ggVennDiagram(questions_list , category.names = c("Evil", "Red eye", "Male", "Bald"))
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "Male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "No hair")%>%
pull(name)
bald_vec
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "Male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "No hair")%>%
pull(name)
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "Male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "No hair")%>%
pull(name)
superhero_info%>%
filter(hair_color == "No hair")
# evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# red eyes
red_vec <- superhero_info %>%
filter(eye_color == "red")%>%
pull(name)
# male
male_vec <- superhero_info %>%
filter(gender == "Male")%>%
pull(name)
# bald
bald_vec <- superhero_info %>%
filter(hair_color == "No Hair")%>%
pull(name)
questions_list <- list(evil_vec, red_vec, male_vec, bald_vec)
ggVennDiagram(questions_list , category.names = c("Evil", "Red eye", "Male", "Bald"))
superhero_info <- superhero_info %>%
clean_names()
skim(superhero_info)
head(superhero_info, n=10)
# Evil
evil_vec <- superhero_info %>%
filter(alignme == "bad")%>%
pull(name)
# Evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# female
female_vec <- superhero_info %>%
filter(gender == "female")%>%
pull(name)
# blond
blond_vec <- superhero_info %>%
filter(hair_color == "Blond")%>%
pull(name)
# Evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# female
female_vec <- superhero_info %>%
filter(gender == "female")%>%
pull(name)
# blond
blond_vec <- superhero_info %>%
filter(hair_color == "Blond")%>%
pull(name)
interest_list <- list(evil_vec, female_vec, blond_vec)
ggVennDiagram(interest_list , category.names = c("Evil", "Female", "Blond"))
# Evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# female
female_vec <- superhero_info %>%
filter(gender == "Female")%>%
pull(name)
# blond
blond_vec <- superhero_info %>%
filter(hair_color == "Blond")%>%
pull(name)
interest_list <- list(evil_vec, female_vec, blond_vec)
ggVennDiagram(interest_list , category.names = c("Evil", "Female", "Blond"))
# Evil
evil_vec <- superhero_info %>%
filter(alignment == "bad")%>%
pull(name)
# female
female_vec <- superhero_info %>%
filter(gender == "Female")%>%
pull(name)
# blond
blond_vec <- superhero_info %>%
filter(hair_color == "Blond")%>%
pull(name)
interest_list <- list(evil_vec, female_vec, blond_vec)
ggVennDiagram(interest_list , category.names = c("Evil", "Female", "Blond"))
superhero_info%>%
filter(hair_color == "No Hair")%>%
filter(gender == "Male")%>%
filter(eye_color == "red")%>%
filter(alignment != "bad")
head(superhero_powers)
power_frequency <- superhero_powers %>%
select(-hero_names) %>%
summarise_all(~(sum(.))) %>%
pivot_longer(everything(), names_to = "power", values_to = "freq")
power_frequency
power_frequency%>%
ggplot(aes(
label = freq,
size = n,
color = freq
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = n,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
library(tidyverse)
library(janitor)
library("palmerpenguins")
library(skimr)
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(scipen=999) #cancels the use of scientific notation for the session
power_frequency%>%
ggplot(aes(
label = power,
size = n,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size = 20) +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area() +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area() +
theme_minimal()
options(warn = -1)
options(warn = -1)
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area() +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area() +
theme_minimal()
power_quantity <- superhero_powers %>%
pivot_longer(-hero_names, names_to = "power", values_to = "yes_or_no") %>%
group_by(hero_names) %>%
mutate(sum_powers = sum(yes_or_no, na.rm=T)) %>%
arrange(desc(sum_powers), hero_names, desc(yes_or_no))
power_quantity
#we have to trim down to only the top 50, or it will crowd the image!
power_quantity <- power_quantity %>%
ungroup %>%
distinct(hero_names, sum_powers) %>%
slice_max(sum_powers, n = 50)
power_quantity
power_quantity%>%
ggplot(aes(
label = hero_names,
size = sum_powers,
color = hero_names
)) +
geom_text_wordcloud() +
scale_size_area() +
theme_minimal()
library(tidyverse)
library(janitor)
library("palmerpenguins")
library(skimr)
#install.packages("ggVennDiagram")
library(ggVennDiagram)
library(RColorBrewer)
#install.packages("ggworldcloud")
library(ggwordcloud)
options(warn = -1)
options(scipen=999) #cancels the use of scientific notation for the session
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area() +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(mini_size=1) +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size=10) +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size=13) +
theme_minimal()
power_frequency%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size=10) +
theme_minimal()
power_frequency%>%
arrange(desc(freq))%>%
head(n=150)%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size=10) +
theme_minimal()
power_frequency%>%
arrange(desc(freq))%>%
head(n=145)%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size=10) +
theme_minimal()
power_frequency%>%
arrange(desc(freq))%>%
head(n=140)%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size=10) +
theme_minimal()
power_frequency%>%
arrange(desc(freq))%>%
head(n=130)%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size=10) +
theme_minimal()
power_frequency%>%
arrange(desc(freq))%>%
head(n=120)%>%
ggplot(aes(
label = power,
size = freq,
color = power
)) +
geom_text_wordcloud() +
scale_size_area(max_size=10) +
theme_minimal()
